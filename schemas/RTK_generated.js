// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Flatbuffer = Flatbuffer || {};

/**
 * @const
 * @namespace
 */
Flatbuffer.RTK = Flatbuffer.RTK || {};

/**
 * @constructor
 */
Flatbuffer.RTK.Vec3 = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.RTK.Vec3}
 */
Flatbuffer.RTK.Vec3.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Flatbuffer.RTK.Vec3.prototype.x = function() {
  return this.bb.readFloat64(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.RTK.Vec3.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Flatbuffer.RTK.Vec3.prototype.y = function() {
  return this.bb.readFloat64(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.RTK.Vec3.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Flatbuffer.RTK.Vec3.prototype.z = function() {
  return this.bb.readFloat64(this.bb_pos + 16);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.RTK.Vec3.prototype.mutate_z = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.RTK.Vec3.createVec3 = function(builder, x, y, z) {
  builder.prep(8, 24);
  builder.writeFloat64(z);
  builder.writeFloat64(y);
  builder.writeFloat64(x);
  return builder.offset();
};

/**
 * @constructor
 */
Flatbuffer.RTK.Pose = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.RTK.Pose}
 */
Flatbuffer.RTK.Pose.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.RTK.Pose=} obj
 * @returns {Flatbuffer.RTK.Pose}
 */
Flatbuffer.RTK.Pose.getRootAsPose = function(bb, obj) {
  return (obj || new Flatbuffer.RTK.Pose).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Flatbuffer.RTK.Vec3=} obj
 * @returns {Flatbuffer.RTK.Vec3|null}
 */
Flatbuffer.RTK.Pose.prototype.pos = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Flatbuffer.RTK.Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Flatbuffer.RTK.Vec3=} obj
 * @returns {Flatbuffer.RTK.Vec3|null}
 */
Flatbuffer.RTK.Pose.prototype.locXY = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Flatbuffer.RTK.Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Flatbuffer.RTK.Vec3=} obj
 * @returns {Flatbuffer.RTK.Vec3|null}
 */
Flatbuffer.RTK.Pose.prototype.vel = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Flatbuffer.RTK.Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Flatbuffer.RTK.Vec3=} obj
 * @returns {Flatbuffer.RTK.Vec3|null}
 */
Flatbuffer.RTK.Pose.prototype.acc = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Flatbuffer.RTK.Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Flatbuffer.RTK.Vec3=} obj
 * @returns {Flatbuffer.RTK.Vec3|null}
 */
Flatbuffer.RTK.Pose.prototype.orientation = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Flatbuffer.RTK.Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Flatbuffer.RTK.Vec3=} obj
 * @returns {Flatbuffer.RTK.Vec3|null}
 */
Flatbuffer.RTK.Pose.prototype.angularRate = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Flatbuffer.RTK.Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @returns {boolean}
 */
Flatbuffer.RTK.Pose.prototype.northPointing = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
Flatbuffer.RTK.Pose.prototype.mutate_northPointing = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Flatbuffer.RTK.Pose.prototype.timestamp = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.RTK.Pose.prototype.mutate_timestamp = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 18);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Flatbuffer.RTK.Pose.prototype.timezone = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.RTK.Pose.prototype.mutate_timezone = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 20);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.RTK.Pose.startPose = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
Flatbuffer.RTK.Pose.addPos = function(builder, posOffset) {
  builder.addFieldStruct(0, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} locXYOffset
 */
Flatbuffer.RTK.Pose.addLocXY = function(builder, locXYOffset) {
  builder.addFieldStruct(1, locXYOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} velOffset
 */
Flatbuffer.RTK.Pose.addVel = function(builder, velOffset) {
  builder.addFieldStruct(2, velOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} accOffset
 */
Flatbuffer.RTK.Pose.addAcc = function(builder, accOffset) {
  builder.addFieldStruct(3, accOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} orientationOffset
 */
Flatbuffer.RTK.Pose.addOrientation = function(builder, orientationOffset) {
  builder.addFieldStruct(4, orientationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} angularRateOffset
 */
Flatbuffer.RTK.Pose.addAngularRate = function(builder, angularRateOffset) {
  builder.addFieldStruct(5, angularRateOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} northPointing
 */
Flatbuffer.RTK.Pose.addNorthPointing = function(builder, northPointing) {
  builder.addFieldInt8(6, +northPointing, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} timestamp
 */
Flatbuffer.RTK.Pose.addTimestamp = function(builder, timestamp) {
  builder.addFieldFloat64(7, timestamp, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} timezone
 */
Flatbuffer.RTK.Pose.addTimezone = function(builder, timezone) {
  builder.addFieldInt32(8, timezone, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.RTK.Pose.endPose = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Flatbuffer.RTK.Poses = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.RTK.Poses}
 */
Flatbuffer.RTK.Poses.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.RTK.Poses=} obj
 * @returns {Flatbuffer.RTK.Poses}
 */
Flatbuffer.RTK.Poses.getRootAsPoses = function(bb, obj) {
  return (obj || new Flatbuffer.RTK.Poses).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Flatbuffer.RTK.Pose=} obj
 * @returns {Flatbuffer.RTK.Pose}
 */
Flatbuffer.RTK.Poses.prototype.poses = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Flatbuffer.RTK.Pose).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.RTK.Poses.prototype.posesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.RTK.Poses.startPoses = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posesOffset
 */
Flatbuffer.RTK.Poses.addPoses = function(builder, posesOffset) {
  builder.addFieldOffset(0, posesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.RTK.Poses.createPosesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.RTK.Poses.startPosesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.RTK.Poses.endPoses = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Flatbuffer.RTK.Poses.finishPosesBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for ECMAScript6 Modules
export {Flatbuffer};
