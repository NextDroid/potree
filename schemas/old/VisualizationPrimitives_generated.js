// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Flatbuffer = Flatbuffer || {};

/**
 * @const
 * @namespace
 */
Flatbuffer.Primitives = Flatbuffer.Primitives || {};

/**
 * A TimestampType is either a single timestamp for an entire object or a vector of timestamps for each vertex
 *
 * @enum {number}
 */
Flatbuffer.Primitives.TimestampType = {
  NONE: 0,
  ObjectTimestamp: 1,
  VertexTimestamps: 2
};

/**
 * A TimestampType is either a single timestamp for an entire object or a vector of timestamps for each vertex
 *
 * @enum {string}
 */
Flatbuffer.Primitives.TimestampTypeName = {
  0: 'NONE',
  1: 'ObjectTimestamp',
  2: 'VertexTimestamps'
};

/**
 * A ColorType is either a single color for the entire object or a vector of colors for each vertex
 *
 * @enum {number}
 */
Flatbuffer.Primitives.ColorType = {
  NONE: 0,
  ObjectColor: 1,
  VertexColors: 2
};

/**
 * A ColorType is either a single color for the entire object or a vector of colors for each vertex
 *
 * @enum {string}
 */
Flatbuffer.Primitives.ColorTypeName = {
  0: 'NONE',
  1: 'ObjectColor',
  2: 'VertexColors'
};

/**
 * @enum {number}
 */
Flatbuffer.Primitives.VisualizationType = {
  NONE: 0,
  NoVisualization: 1,
  StaticVisualization: 2,
  HideAndShowAnimation: 3,
  HighlightAnimation: 4
};

/**
 * @enum {string}
 */
Flatbuffer.Primitives.VisualizationTypeName = {
  0: 'NONE',
  1: 'NoVisualization',
  2: 'StaticVisualization',
  3: 'HideAndShowAnimation',
  4: 'HighlightAnimation'
};

/**
 * 2D Vector Struct
 *
 * @constructor
 */
function Vec2() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Vec2}
 */
Vec2.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Vec2.prototype.x = function() {
  return this.bb.readFloat64(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec2.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Vec2.prototype.y = function() {
  return this.bb.readFloat64(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec2.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
Vec2.createVec2 = function(builder, x, y) {
  builder.prep(8, 16);
  builder.writeFloat64(y);
  builder.writeFloat64(x);
  return builder.offset();
};

/**
 * 3D Vector Struct
 *
 * @constructor
 */
function Vec3() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Vec3}
 */
Vec3.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Vec3.prototype.x = function() {
  return this.bb.readFloat64(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec3.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Vec3.prototype.y = function() {
  return this.bb.readFloat64(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec3.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Vec3.prototype.z = function() {
  return this.bb.readFloat64(this.bb_pos + 16);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec3.prototype.mutate_z = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
Vec3.createVec3 = function(builder, x, y, z) {
  builder.prep(8, 24);
  builder.writeFloat64(z);
  builder.writeFloat64(y);
  builder.writeFloat64(x);
  return builder.offset();
};

/**
 * 4D Vector Struct
 *
 * @constructor
 */
function Vec4() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Vec4}
 */
Vec4.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Vec4.prototype.x = function() {
  return this.bb.readFloat64(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec4.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Vec4.prototype.y = function() {
  return this.bb.readFloat64(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec4.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Vec4.prototype.z = function() {
  return this.bb.readFloat64(this.bb_pos + 16);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec4.prototype.mutate_z = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Vec4.prototype.w = function() {
  return this.bb.readFloat64(this.bb_pos + 24);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Vec4.prototype.mutate_w = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 24);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @returns {flatbuffers.Offset}
 */
Vec4.createVec4 = function(builder, x, y, z, w) {
  builder.prep(8, 32);
  builder.writeFloat64(w);
  builder.writeFloat64(z);
  builder.writeFloat64(y);
  builder.writeFloat64(x);
  return builder.offset();
};

/**
 * Explicit Color Struct using unsigned 1 byte values [0,255]
 *
 * @constructor
 */
function Color() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Color}
 */
Color.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Color.prototype.r = function() {
  return this.bb.readUint8(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Color.prototype.mutate_r = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Color.prototype.g = function() {
  return this.bb.readUint8(this.bb_pos + 1);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Color.prototype.mutate_g = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 1);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Color.prototype.b = function() {
  return this.bb.readUint8(this.bb_pos + 2);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Color.prototype.mutate_b = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 2);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Color.prototype.a = function() {
  return this.bb.readUint8(this.bb_pos + 3);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Color.prototype.mutate_a = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 3);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @param {number} a
 * @returns {flatbuffers.Offset}
 */
Color.createColor = function(builder, r, g, b, a) {
  builder.prep(1, 4);
  builder.writeInt8(a);
  builder.writeInt8(b);
  builder.writeInt8(g);
  builder.writeInt8(r);
  return builder.offset();
};

/**
 * Used for a single timestamp applied to an entire object
 *
 * @constructor
 */
Flatbuffer.Primitives.ObjectTimestamp = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.ObjectTimestamp}
 */
Flatbuffer.Primitives.ObjectTimestamp.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.ObjectTimestamp=} obj
 * @returns {Flatbuffer.Primitives.ObjectTimestamp}
 */
Flatbuffer.Primitives.ObjectTimestamp.getRootAsObjectTimestamp = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.ObjectTimestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.ObjectTimestamp.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.ObjectTimestamp.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.ObjectTimestamp.startObjectTimestamp = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Flatbuffer.Primitives.ObjectTimestamp.addValue = function(builder, value) {
  builder.addFieldFloat64(0, value, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.ObjectTimestamp.endObjectTimestamp = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.ObjectTimestamp.createObjectTimestamp = function(builder, value) {
  Flatbuffer.Primitives.ObjectTimestamp.startObjectTimestamp(builder);
  Flatbuffer.Primitives.ObjectTimestamp.addValue(builder, value);
  return Flatbuffer.Primitives.ObjectTimestamp.endObjectTimestamp(builder);
}

/**
 * Used for a vector of timestamps (must have exactly 1 timestamp for each vertex)
 *
 * @constructor
 */
Flatbuffer.Primitives.VertexTimestamps = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.VertexTimestamps}
 */
Flatbuffer.Primitives.VertexTimestamps.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.VertexTimestamps=} obj
 * @returns {Flatbuffer.Primitives.VertexTimestamps}
 */
Flatbuffer.Primitives.VertexTimestamps.getRootAsVertexTimestamps = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.VertexTimestamps).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
Flatbuffer.Primitives.VertexTimestamps.prototype.values = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat64(this.bb.__vector(this.bb_pos + offset) + index * 8) : 0;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.VertexTimestamps.prototype.valuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float64Array}
 */
Flatbuffer.Primitives.VertexTimestamps.prototype.valuesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Float64Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.VertexTimestamps.startVertexTimestamps = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 */
Flatbuffer.Primitives.VertexTimestamps.addValues = function(builder, valuesOffset) {
  builder.addFieldOffset(0, valuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.VertexTimestamps.createValuesVector = function(builder, data) {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.Primitives.VertexTimestamps.startValuesVector = function(builder, numElems) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.VertexTimestamps.endVertexTimestamps = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.VertexTimestamps.createVertexTimestamps = function(builder, valuesOffset) {
  Flatbuffer.Primitives.VertexTimestamps.startVertexTimestamps(builder);
  Flatbuffer.Primitives.VertexTimestamps.addValues(builder, valuesOffset);
  return Flatbuffer.Primitives.VertexTimestamps.endVertexTimestamps(builder);
}

/**
 * Used for a single color applied to an entire object
 *
 * @constructor
 */
Flatbuffer.Primitives.ObjectColor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.ObjectColor}
 */
Flatbuffer.Primitives.ObjectColor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.ObjectColor=} obj
 * @returns {Flatbuffer.Primitives.ObjectColor}
 */
Flatbuffer.Primitives.ObjectColor.getRootAsObjectColor = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.ObjectColor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Color=} obj
 * @returns {Color|null}
 */
Flatbuffer.Primitives.ObjectColor.prototype.value = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Color).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.ObjectColor.startObjectColor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
Flatbuffer.Primitives.ObjectColor.addValue = function(builder, valueOffset) {
  builder.addFieldStruct(0, valueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.ObjectColor.endObjectColor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.ObjectColor.createObjectColor = function(builder, valueOffset) {
  Flatbuffer.Primitives.ObjectColor.startObjectColor(builder);
  Flatbuffer.Primitives.ObjectColor.addValue(builder, valueOffset);
  return Flatbuffer.Primitives.ObjectColor.endObjectColor(builder);
}

/**
 * Used for a vector of colors (must have exactly 1 timestamp for each vertex)
 *
 * @constructor
 */
Flatbuffer.Primitives.VertexColors = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.VertexColors}
 */
Flatbuffer.Primitives.VertexColors.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.VertexColors=} obj
 * @returns {Flatbuffer.Primitives.VertexColors}
 */
Flatbuffer.Primitives.VertexColors.getRootAsVertexColors = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.VertexColors).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Color=} obj
 * @returns {Color}
 */
Flatbuffer.Primitives.VertexColors.prototype.values = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Color).__init(this.bb.__vector(this.bb_pos + offset) + index * 4, this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.VertexColors.prototype.valuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.VertexColors.startVertexColors = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 */
Flatbuffer.Primitives.VertexColors.addValues = function(builder, valuesOffset) {
  builder.addFieldOffset(0, valuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.Primitives.VertexColors.startValuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.VertexColors.endVertexColors = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.VertexColors.createVertexColors = function(builder, valuesOffset) {
  Flatbuffer.Primitives.VertexColors.startVertexColors(builder);
  Flatbuffer.Primitives.VertexColors.addValues(builder, valuesOffset);
  return Flatbuffer.Primitives.VertexColors.endVertexColors(builder);
}

/**
 * Use this for objects that are not visualized
 *
 * @constructor
 */
Flatbuffer.Primitives.NoVisualization = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.NoVisualization}
 */
Flatbuffer.Primitives.NoVisualization.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.NoVisualization=} obj
 * @returns {Flatbuffer.Primitives.NoVisualization}
 */
Flatbuffer.Primitives.NoVisualization.getRootAsNoVisualization = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.NoVisualization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.NoVisualization.startNoVisualization = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.NoVisualization.endNoVisualization = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.NoVisualization.createNoVisualization = function(builder) {
  Flatbuffer.Primitives.NoVisualization.startNoVisualization(builder);
  return Flatbuffer.Primitives.NoVisualization.endNoVisualization(builder);
}

/**
 * Use this for Visualizing Static Objects that will not be animated but just visible for all time
 *
 * @constructor
 */
Flatbuffer.Primitives.StaticVisualization = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.StaticVisualization}
 */
Flatbuffer.Primitives.StaticVisualization.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.StaticVisualization=} obj
 * @returns {Flatbuffer.Primitives.StaticVisualization}
 */
Flatbuffer.Primitives.StaticVisualization.getRootAsStaticVisualization = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.StaticVisualization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Flatbuffer.Primitives.ColorType}
 */
Flatbuffer.Primitives.StaticVisualization.prototype.colorType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Flatbuffer.Primitives.ColorType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.ColorType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.ColorType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.StaticVisualization.prototype.mutate_color_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.StaticVisualization.prototype.color = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.StaticVisualization.startStaticVisualization = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.ColorType} colorType
 */
Flatbuffer.Primitives.StaticVisualization.addColorType = function(builder, colorType) {
  builder.addFieldInt8(0, colorType, Flatbuffer.Primitives.ColorType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} colorOffset
 */
Flatbuffer.Primitives.StaticVisualization.addColor = function(builder, colorOffset) {
  builder.addFieldOffset(1, colorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.StaticVisualization.endStaticVisualization = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.ColorType} colorType
 * @param {flatbuffers.Offset} colorOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.StaticVisualization.createStaticVisualization = function(builder, colorType, colorOffset) {
  Flatbuffer.Primitives.StaticVisualization.startStaticVisualization(builder);
  Flatbuffer.Primitives.StaticVisualization.addColorType(builder, colorType);
  Flatbuffer.Primitives.StaticVisualization.addColor(builder, colorOffset);
  return Flatbuffer.Primitives.StaticVisualization.endStaticVisualization(builder);
}

/**
 * Use this for Visualizing Dynamic Objects that will be animated by toggling visibility based on timestamp
 *
 * @constructor
 */
Flatbuffer.Primitives.HideAndShowAnimation = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.HideAndShowAnimation}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.HideAndShowAnimation=} obj
 * @returns {Flatbuffer.Primitives.HideAndShowAnimation}
 */
Flatbuffer.Primitives.HideAndShowAnimation.getRootAsHideAndShowAnimation = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.HideAndShowAnimation).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Flatbuffer.Primitives.TimestampType}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.timestampType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Flatbuffer.Primitives.TimestampType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.TimestampType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.TimestampType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.mutate_timestamp_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.timestamp = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @returns {boolean}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.visibleWhenActive = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.mutate_visibleWhenActive = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {Flatbuffer.Primitives.ColorType}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.colorType = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? /** @type {Flatbuffer.Primitives.ColorType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.ColorType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.ColorType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.mutate_color_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.HideAndShowAnimation.prototype.color = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.HideAndShowAnimation.startHideAndShowAnimation = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.TimestampType} timestampType
 */
Flatbuffer.Primitives.HideAndShowAnimation.addTimestampType = function(builder, timestampType) {
  builder.addFieldInt8(0, timestampType, Flatbuffer.Primitives.TimestampType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} timestampOffset
 */
Flatbuffer.Primitives.HideAndShowAnimation.addTimestamp = function(builder, timestampOffset) {
  builder.addFieldOffset(1, timestampOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} visibleWhenActive
 */
Flatbuffer.Primitives.HideAndShowAnimation.addVisibleWhenActive = function(builder, visibleWhenActive) {
  builder.addFieldInt8(2, +visibleWhenActive, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.ColorType} colorType
 */
Flatbuffer.Primitives.HideAndShowAnimation.addColorType = function(builder, colorType) {
  builder.addFieldInt8(3, colorType, Flatbuffer.Primitives.ColorType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} colorOffset
 */
Flatbuffer.Primitives.HideAndShowAnimation.addColor = function(builder, colorOffset) {
  builder.addFieldOffset(4, colorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.HideAndShowAnimation.endHideAndShowAnimation = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.TimestampType} timestampType
 * @param {flatbuffers.Offset} timestampOffset
 * @param {boolean} visibleWhenActive
 * @param {Flatbuffer.Primitives.ColorType} colorType
 * @param {flatbuffers.Offset} colorOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.HideAndShowAnimation.createHideAndShowAnimation = function(builder, timestampType, timestampOffset, visibleWhenActive, colorType, colorOffset) {
  Flatbuffer.Primitives.HideAndShowAnimation.startHideAndShowAnimation(builder);
  Flatbuffer.Primitives.HideAndShowAnimation.addTimestampType(builder, timestampType);
  Flatbuffer.Primitives.HideAndShowAnimation.addTimestamp(builder, timestampOffset);
  Flatbuffer.Primitives.HideAndShowAnimation.addVisibleWhenActive(builder, visibleWhenActive);
  Flatbuffer.Primitives.HideAndShowAnimation.addColorType(builder, colorType);
  Flatbuffer.Primitives.HideAndShowAnimation.addColor(builder, colorOffset);
  return Flatbuffer.Primitives.HideAndShowAnimation.endHideAndShowAnimation(builder);
}

/**
 * Use this for Visualizing Dynamic Objects that will be animated by highlighting based on timestamp
 *
 * @constructor
 */
Flatbuffer.Primitives.HighlightAnimation = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.HighlightAnimation}
 */
Flatbuffer.Primitives.HighlightAnimation.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.HighlightAnimation=} obj
 * @returns {Flatbuffer.Primitives.HighlightAnimation}
 */
Flatbuffer.Primitives.HighlightAnimation.getRootAsHighlightAnimation = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.HighlightAnimation).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Flatbuffer.Primitives.TimestampType}
 */
Flatbuffer.Primitives.HighlightAnimation.prototype.timestampType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Flatbuffer.Primitives.TimestampType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.TimestampType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.TimestampType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.HighlightAnimation.prototype.mutate_timestamp_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.HighlightAnimation.prototype.timestamp = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {Color=} obj
 * @returns {Color|null}
 */
Flatbuffer.Primitives.HighlightAnimation.prototype.color = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Color).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Color=} obj
 * @returns {Color|null}
 */
Flatbuffer.Primitives.HighlightAnimation.prototype.highlightColor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Color).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.HighlightAnimation.startHighlightAnimation = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.TimestampType} timestampType
 */
Flatbuffer.Primitives.HighlightAnimation.addTimestampType = function(builder, timestampType) {
  builder.addFieldInt8(0, timestampType, Flatbuffer.Primitives.TimestampType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} timestampOffset
 */
Flatbuffer.Primitives.HighlightAnimation.addTimestamp = function(builder, timestampOffset) {
  builder.addFieldOffset(1, timestampOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} colorOffset
 */
Flatbuffer.Primitives.HighlightAnimation.addColor = function(builder, colorOffset) {
  builder.addFieldStruct(2, colorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} highlightColorOffset
 */
Flatbuffer.Primitives.HighlightAnimation.addHighlightColor = function(builder, highlightColorOffset) {
  builder.addFieldStruct(3, highlightColorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.HighlightAnimation.endHighlightAnimation = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.TimestampType} timestampType
 * @param {flatbuffers.Offset} timestampOffset
 * @param {flatbuffers.Offset} colorOffset
 * @param {flatbuffers.Offset} highlightColorOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.HighlightAnimation.createHighlightAnimation = function(builder, timestampType, timestampOffset, colorOffset, highlightColorOffset) {
  Flatbuffer.Primitives.HighlightAnimation.startHighlightAnimation(builder);
  Flatbuffer.Primitives.HighlightAnimation.addTimestampType(builder, timestampType);
  Flatbuffer.Primitives.HighlightAnimation.addTimestamp(builder, timestampOffset);
  Flatbuffer.Primitives.HighlightAnimation.addColor(builder, colorOffset);
  Flatbuffer.Primitives.HighlightAnimation.addHighlightColor(builder, highlightColorOffset);
  return Flatbuffer.Primitives.HighlightAnimation.endHighlightAnimation(builder);
}

/**
 * 3D Point
 *
 * @constructor
 */
Flatbuffer.Primitives.Point3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.Point3D}
 */
Flatbuffer.Primitives.Point3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.Point3D=} obj
 * @returns {Flatbuffer.Primitives.Point3D}
 */
Flatbuffer.Primitives.Point3D.getRootAsPoint3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.Point3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Point3D.prototype.pos = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @returns {Flatbuffer.Primitives.VisualizationType}
 */
Flatbuffer.Primitives.Point3D.prototype.vizType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {Flatbuffer.Primitives.VisualizationType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.VisualizationType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.VisualizationType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.Point3D.prototype.mutate_viz_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.Point3D.prototype.viz = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.Point3D.startPoint3D = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
Flatbuffer.Primitives.Point3D.addPos = function(builder, posOffset) {
  builder.addFieldStruct(0, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 */
Flatbuffer.Primitives.Point3D.addVizType = function(builder, vizType) {
  builder.addFieldInt8(1, vizType, Flatbuffer.Primitives.VisualizationType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} vizOffset
 */
Flatbuffer.Primitives.Point3D.addViz = function(builder, vizOffset) {
  builder.addFieldOffset(2, vizOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Point3D.endPoint3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 * @param {flatbuffers.Offset} vizOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Point3D.createPoint3D = function(builder, posOffset, vizType, vizOffset) {
  Flatbuffer.Primitives.Point3D.startPoint3D(builder);
  Flatbuffer.Primitives.Point3D.addPos(builder, posOffset);
  Flatbuffer.Primitives.Point3D.addVizType(builder, vizType);
  Flatbuffer.Primitives.Point3D.addViz(builder, vizOffset);
  return Flatbuffer.Primitives.Point3D.endPoint3D(builder);
}

/**
 * @constructor
 */
Flatbuffer.Primitives.Points3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.Points3D}
 */
Flatbuffer.Primitives.Points3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.Points3D=} obj
 * @returns {Flatbuffer.Primitives.Points3D}
 */
Flatbuffer.Primitives.Points3D.getRootAsPoints3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.Points3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Flatbuffer.Primitives.Point3D=} obj
 * @returns {Flatbuffer.Primitives.Point3D}
 */
Flatbuffer.Primitives.Points3D.prototype.points = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Flatbuffer.Primitives.Point3D).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.Points3D.prototype.pointsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.Points3D.startPoints3D = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pointsOffset
 */
Flatbuffer.Primitives.Points3D.addPoints = function(builder, pointsOffset) {
  builder.addFieldOffset(0, pointsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Points3D.createPointsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.Primitives.Points3D.startPointsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Points3D.endPoints3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pointsOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Points3D.createPoints3D = function(builder, pointsOffset) {
  Flatbuffer.Primitives.Points3D.startPoints3D(builder);
  Flatbuffer.Primitives.Points3D.addPoints(builder, pointsOffset);
  return Flatbuffer.Primitives.Points3D.endPoints3D(builder);
}

/**
 * 3D Sphere
 *
 * @constructor
 */
Flatbuffer.Primitives.Sphere3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.Sphere3D}
 */
Flatbuffer.Primitives.Sphere3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.Sphere3D=} obj
 * @returns {Flatbuffer.Primitives.Sphere3D}
 */
Flatbuffer.Primitives.Sphere3D.getRootAsSphere3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.Sphere3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Sphere3D.prototype.pos = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.Sphere3D.prototype.radius = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.Sphere3D.prototype.mutate_radius = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {Flatbuffer.Primitives.VisualizationType}
 */
Flatbuffer.Primitives.Sphere3D.prototype.vizType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {Flatbuffer.Primitives.VisualizationType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.VisualizationType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.VisualizationType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.Sphere3D.prototype.mutate_viz_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.Sphere3D.prototype.viz = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.Sphere3D.startSphere3D = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 */
Flatbuffer.Primitives.Sphere3D.addPos = function(builder, posOffset) {
  builder.addFieldStruct(0, posOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} radius
 */
Flatbuffer.Primitives.Sphere3D.addRadius = function(builder, radius) {
  builder.addFieldFloat64(1, radius, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 */
Flatbuffer.Primitives.Sphere3D.addVizType = function(builder, vizType) {
  builder.addFieldInt8(2, vizType, Flatbuffer.Primitives.VisualizationType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} vizOffset
 */
Flatbuffer.Primitives.Sphere3D.addViz = function(builder, vizOffset) {
  builder.addFieldOffset(3, vizOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Sphere3D.endSphere3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} posOffset
 * @param {number} radius
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 * @param {flatbuffers.Offset} vizOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Sphere3D.createSphere3D = function(builder, posOffset, radius, vizType, vizOffset) {
  Flatbuffer.Primitives.Sphere3D.startSphere3D(builder);
  Flatbuffer.Primitives.Sphere3D.addPos(builder, posOffset);
  Flatbuffer.Primitives.Sphere3D.addRadius(builder, radius);
  Flatbuffer.Primitives.Sphere3D.addVizType(builder, vizType);
  Flatbuffer.Primitives.Sphere3D.addViz(builder, vizOffset);
  return Flatbuffer.Primitives.Sphere3D.endSphere3D(builder);
}

/**
 * @constructor
 */
Flatbuffer.Primitives.Spheres3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.Spheres3D}
 */
Flatbuffer.Primitives.Spheres3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.Spheres3D=} obj
 * @returns {Flatbuffer.Primitives.Spheres3D}
 */
Flatbuffer.Primitives.Spheres3D.getRootAsSpheres3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.Spheres3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Flatbuffer.Primitives.Sphere3D=} obj
 * @returns {Flatbuffer.Primitives.Sphere3D}
 */
Flatbuffer.Primitives.Spheres3D.prototype.points = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Flatbuffer.Primitives.Sphere3D).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.Spheres3D.prototype.pointsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.Spheres3D.startSpheres3D = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pointsOffset
 */
Flatbuffer.Primitives.Spheres3D.addPoints = function(builder, pointsOffset) {
  builder.addFieldOffset(0, pointsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Spheres3D.createPointsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.Primitives.Spheres3D.startPointsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Spheres3D.endSpheres3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pointsOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Spheres3D.createSpheres3D = function(builder, pointsOffset) {
  Flatbuffer.Primitives.Spheres3D.startSpheres3D(builder);
  Flatbuffer.Primitives.Spheres3D.addPoints(builder, pointsOffset);
  return Flatbuffer.Primitives.Spheres3D.endSpheres3D(builder);
}

/**
 * 3D PolyLine
 *
 * @constructor
 */
Flatbuffer.Primitives.PolyLine3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.PolyLine3D}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.PolyLine3D=} obj
 * @returns {Flatbuffer.Primitives.PolyLine3D}
 */
Flatbuffer.Primitives.PolyLine3D.getRootAsPolyLine3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.PolyLine3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Vec3=} obj
 * @returns {Vec3}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.vertices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec3).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.verticesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Flatbuffer.Primitives.VisualizationType}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.vizType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {Flatbuffer.Primitives.VisualizationType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.VisualizationType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.VisualizationType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.mutate_viz_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.viz = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.widthForVisualization = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 1.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.PolyLine3D.prototype.mutate_widthForVisualization = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.PolyLine3D.startPolyLine3D = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} verticesOffset
 */
Flatbuffer.Primitives.PolyLine3D.addVertices = function(builder, verticesOffset) {
  builder.addFieldOffset(0, verticesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.Primitives.PolyLine3D.startVerticesVector = function(builder, numElems) {
  builder.startVector(24, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 */
Flatbuffer.Primitives.PolyLine3D.addVizType = function(builder, vizType) {
  builder.addFieldInt8(1, vizType, Flatbuffer.Primitives.VisualizationType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} vizOffset
 */
Flatbuffer.Primitives.PolyLine3D.addViz = function(builder, vizOffset) {
  builder.addFieldOffset(2, vizOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} widthForVisualization
 */
Flatbuffer.Primitives.PolyLine3D.addWidthForVisualization = function(builder, widthForVisualization) {
  builder.addFieldFloat64(3, widthForVisualization, 1.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.PolyLine3D.endPolyLine3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} verticesOffset
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 * @param {flatbuffers.Offset} vizOffset
 * @param {number} widthForVisualization
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.PolyLine3D.createPolyLine3D = function(builder, verticesOffset, vizType, vizOffset, widthForVisualization) {
  Flatbuffer.Primitives.PolyLine3D.startPolyLine3D(builder);
  Flatbuffer.Primitives.PolyLine3D.addVertices(builder, verticesOffset);
  Flatbuffer.Primitives.PolyLine3D.addVizType(builder, vizType);
  Flatbuffer.Primitives.PolyLine3D.addViz(builder, vizOffset);
  Flatbuffer.Primitives.PolyLine3D.addWidthForVisualization(builder, widthForVisualization);
  return Flatbuffer.Primitives.PolyLine3D.endPolyLine3D(builder);
}

/**
 * @constructor
 */
Flatbuffer.Primitives.PolyLines3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.PolyLines3D}
 */
Flatbuffer.Primitives.PolyLines3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.PolyLines3D=} obj
 * @returns {Flatbuffer.Primitives.PolyLines3D}
 */
Flatbuffer.Primitives.PolyLines3D.getRootAsPolyLines3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.PolyLines3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Flatbuffer.Primitives.PolyLine3D=} obj
 * @returns {Flatbuffer.Primitives.PolyLine3D}
 */
Flatbuffer.Primitives.PolyLines3D.prototype.lines = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Flatbuffer.Primitives.PolyLine3D).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.PolyLines3D.prototype.linesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.PolyLines3D.startPolyLines3D = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} linesOffset
 */
Flatbuffer.Primitives.PolyLines3D.addLines = function(builder, linesOffset) {
  builder.addFieldOffset(0, linesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.PolyLines3D.createLinesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.Primitives.PolyLines3D.startLinesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.PolyLines3D.endPolyLines3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} linesOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.PolyLines3D.createPolyLines3D = function(builder, linesOffset) {
  Flatbuffer.Primitives.PolyLines3D.startPolyLines3D(builder);
  Flatbuffer.Primitives.PolyLines3D.addLines(builder, linesOffset);
  return Flatbuffer.Primitives.PolyLines3D.endPolyLines3D(builder);
}

/**
 * 3D Box
 *
 * @constructor
 */
Flatbuffer.Primitives.Box3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.Box3D}
 */
Flatbuffer.Primitives.Box3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.Box3D=} obj
 * @returns {Flatbuffer.Primitives.Box3D}
 */
Flatbuffer.Primitives.Box3D.getRootAsBox3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.Box3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p0 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p1 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p2 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p3 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p4 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p5 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p6 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {Vec3=} obj
 * @returns {Vec3|null}
 */
Flatbuffer.Primitives.Box3D.prototype.p7 = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new Vec3).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @returns {Flatbuffer.Primitives.VisualizationType}
 */
Flatbuffer.Primitives.Box3D.prototype.vizType = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? /** @type {Flatbuffer.Primitives.VisualizationType} */ (this.bb.readUint8(this.bb_pos + offset)) : Flatbuffer.Primitives.VisualizationType.NONE;
};

/**
 * @param {Flatbuffer.Primitives.VisualizationType} value
 * @returns {boolean}
 */
Flatbuffer.Primitives.Box3D.prototype.mutate_viz_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 20);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Flatbuffer.Primitives.Box3D.prototype.viz = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.Box3D.startBox3D = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p0Offset
 */
Flatbuffer.Primitives.Box3D.addP0 = function(builder, p0Offset) {
  builder.addFieldStruct(0, p0Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p1Offset
 */
Flatbuffer.Primitives.Box3D.addP1 = function(builder, p1Offset) {
  builder.addFieldStruct(1, p1Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p2Offset
 */
Flatbuffer.Primitives.Box3D.addP2 = function(builder, p2Offset) {
  builder.addFieldStruct(2, p2Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p3Offset
 */
Flatbuffer.Primitives.Box3D.addP3 = function(builder, p3Offset) {
  builder.addFieldStruct(3, p3Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p4Offset
 */
Flatbuffer.Primitives.Box3D.addP4 = function(builder, p4Offset) {
  builder.addFieldStruct(4, p4Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p5Offset
 */
Flatbuffer.Primitives.Box3D.addP5 = function(builder, p5Offset) {
  builder.addFieldStruct(5, p5Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p6Offset
 */
Flatbuffer.Primitives.Box3D.addP6 = function(builder, p6Offset) {
  builder.addFieldStruct(6, p6Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p7Offset
 */
Flatbuffer.Primitives.Box3D.addP7 = function(builder, p7Offset) {
  builder.addFieldStruct(7, p7Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 */
Flatbuffer.Primitives.Box3D.addVizType = function(builder, vizType) {
  builder.addFieldInt8(8, vizType, Flatbuffer.Primitives.VisualizationType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} vizOffset
 */
Flatbuffer.Primitives.Box3D.addViz = function(builder, vizOffset) {
  builder.addFieldOffset(9, vizOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Box3D.endBox3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} p0Offset
 * @param {flatbuffers.Offset} p1Offset
 * @param {flatbuffers.Offset} p2Offset
 * @param {flatbuffers.Offset} p3Offset
 * @param {flatbuffers.Offset} p4Offset
 * @param {flatbuffers.Offset} p5Offset
 * @param {flatbuffers.Offset} p6Offset
 * @param {flatbuffers.Offset} p7Offset
 * @param {Flatbuffer.Primitives.VisualizationType} vizType
 * @param {flatbuffers.Offset} vizOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Box3D.createBox3D = function(builder, p0Offset, p1Offset, p2Offset, p3Offset, p4Offset, p5Offset, p6Offset, p7Offset, vizType, vizOffset) {
  Flatbuffer.Primitives.Box3D.startBox3D(builder);
  Flatbuffer.Primitives.Box3D.addP0(builder, p0Offset);
  Flatbuffer.Primitives.Box3D.addP1(builder, p1Offset);
  Flatbuffer.Primitives.Box3D.addP2(builder, p2Offset);
  Flatbuffer.Primitives.Box3D.addP3(builder, p3Offset);
  Flatbuffer.Primitives.Box3D.addP4(builder, p4Offset);
  Flatbuffer.Primitives.Box3D.addP5(builder, p5Offset);
  Flatbuffer.Primitives.Box3D.addP6(builder, p6Offset);
  Flatbuffer.Primitives.Box3D.addP7(builder, p7Offset);
  Flatbuffer.Primitives.Box3D.addVizType(builder, vizType);
  Flatbuffer.Primitives.Box3D.addViz(builder, vizOffset);
  return Flatbuffer.Primitives.Box3D.endBox3D(builder);
}

/**
 * @constructor
 */
Flatbuffer.Primitives.Boxes3D = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuffer.Primitives.Boxes3D}
 */
Flatbuffer.Primitives.Boxes3D.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuffer.Primitives.Boxes3D=} obj
 * @returns {Flatbuffer.Primitives.Boxes3D}
 */
Flatbuffer.Primitives.Boxes3D.getRootAsBoxes3D = function(bb, obj) {
  return (obj || new Flatbuffer.Primitives.Boxes3D).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Flatbuffer.Primitives.Box3D=} obj
 * @returns {Flatbuffer.Primitives.Box3D}
 */
Flatbuffer.Primitives.Boxes3D.prototype.boxes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Flatbuffer.Primitives.Box3D).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuffer.Primitives.Boxes3D.prototype.boxesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuffer.Primitives.Boxes3D.startBoxes3D = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} boxesOffset
 */
Flatbuffer.Primitives.Boxes3D.addBoxes = function(builder, boxesOffset) {
  builder.addFieldOffset(0, boxesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Boxes3D.createBoxesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuffer.Primitives.Boxes3D.startBoxesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Boxes3D.endBoxes3D = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} boxesOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuffer.Primitives.Boxes3D.createBoxes3D = function(builder, boxesOffset) {
  Flatbuffer.Primitives.Boxes3D.startBoxes3D(builder);
  Flatbuffer.Primitives.Boxes3D.addBoxes(builder, boxesOffset);
  return Flatbuffer.Primitives.Boxes3D.endBoxes3D(builder);
}

// Exports for ECMAScript6 Modules
export {Vec2};
export {Vec3};
export {Vec4};
export {Color};
export {Flatbuffer};
